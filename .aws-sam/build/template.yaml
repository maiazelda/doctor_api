AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'doctor_api

  Sample SAM Template for doctor_api

  '
Globals:
  Function:
    Timeout: 3
Parameters:
  Stage:
    Description: An stage name that will be prefixed to resource names
    Type: String
    Default: dev
Resources:
  DeviceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: user
        AttributeType: S
      - AttributeName: device
        AttributeType: S
      KeySchema:
      - AttributeName: user
        KeyType: HASH
      - AttributeName: device
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Cors:
        AllowMethods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
        AllowHeaders: '''Content-Type,X-Amz-Date,X-Amz-Security-Token,Authorization,X-Api-Key,X-Requested-With,Accept,Access-Control-Allow-Methods,Access-Control-Allow-Origin,Access-Control-Allow-Headers'''
        AllowOrigin: '''*'''
  GetDevices:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetDevices
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /devices
            Method: get
  CreateDevices:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateDevices
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /devices
            Method: post
  UpdateDevices:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: UpdateDevices
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /devices/{id}
            Method: put
  DeleteDevices:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DeleteDevices
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /users/{user}/devices/{device}
            Method: delete
  GetDeviceDetails:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: GetDeviceDetails
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DeviceTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId:
              Ref: Api
            Path: /users/{user}/devices/{device}
            Method: get
